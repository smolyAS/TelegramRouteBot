package org.example;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.InputFile;

public class RouteBot extends TelegramLongPollingBot {

    @Override
    public String getBotUsername() {
        return "MyRoute_v1_bot"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ –∏–º—è –±–æ—Ç–∞
    }

    @Override
    public String getBotToken() {
        return "7847754007:AAHerJpTiV6bXg8FFdvWS7oPGuiJ9yHw_8s"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ç–æ–∫–µ–Ω
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String[] parts = update.getMessage().getText().replace("/route ", "").split(";");
            if (parts.length != 2) {
                sendText(update.getMessage().getChatId(), "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: /route –ê–¥—Ä–µ—Å1; –ê–¥—Ä–µ—Å2");
                return;
            }

            String from = parts[0].trim();
            String to = parts[1].trim();

            try {
                RouteService.RouteResult route = RouteService.buildRoute(from, to);

                StringBuilder text = new StringBuilder();
                text.append("üöó –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ").append((int) route.distance()).append(" –º\n");
                text.append("‚è±Ô∏è –í—Ä–µ–º—è: ").append((int) route.duration()).append(" —Å–µ–∫\n\n");

                for (String step : route.instructions()) {
                    text.append("; ").append(step).append("\n");
                }

                sendPhoto(update.getMessage().getChatId(), route.mapUrl());
                sendText(update.getMessage().getChatId(), text.toString());

            } catch (Exception e) {
                e.printStackTrace();
                sendText(update.getMessage().getChatId(), "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞: " + e.getMessage());
            }
        }
    }

    private void sendText(Long chatId, String text) {
        try {
            execute(SendMessage.builder().chatId(chatId.toString()).text(text).build());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void sendPhoto(Long chatId, String photoUrl) {
        try {
            System.out.println("üì∑ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–æ—Ç–æ –ø–æ —Å—Å—ã–ª–∫–µ: " + photoUrl); // –ª–æ–≥

            InputFile inputFile = new InputFile(photoUrl); // –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π URL!
            SendPhoto sendPhoto = SendPhoto.builder()
                    .chatId(chatId.toString())
                    .photo(inputFile)
                    .build();
            execute(sendPhoto);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
